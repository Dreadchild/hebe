#!/usr/bin/env php
<?php

define("PATH", dirname(__FILE__));
require dirname(__FILE__) . '/libs/hebe.php';

$app = array_shift($argv);
$command = array_shift($argv);
$arguments = $argv;

$file = 'default';
$home = exec('echo $HOME');

if (!$command) $command = 'help';
switch ($command){

	case 'register':
		if (count($arguments) < 1) usage($command);
		$options = array(
			'arguments' => array(),
			'force' => false
		);

		$build = 'arguments';

		foreach ($arguments as $arg){

			if ($arg == '+force'){
				$build = 'force';
			}

			if (is_array($options[$build])) $options[$build][] = $arg;
			else if (is_bool($options[$build])) $options[$build] = true;
			else $options[$build] = $arg;

		}

		$hebe = new Hebe();
		$hebe->projects->register($options);

		break;

	case 'unregister':
		if (count($arguments) < 1) usage($command);
		$options = array(
			'arguments' => array()
		);

		$build = 'arguments';

		foreach ($arguments as $arg){

			if (is_array($options[$build])) $options[$build][] = $arg;
			else if (is_bool($options[$build])) $options[$build] = true;
			else $options[$build] = $arg;

		}

		$hebe = new Hebe();
		$hebe->projects->unregister($options);

		break;

	case 'list':
		$selected = array(
			'arguments' => array(),
			'filter' => array(),
			'no_details' => false,
			'no_nodes' => false,
			'no_sources' => false,
			'no_destinations' => false
		);

		$build = 'arguments';

		foreach ($arguments as $arg){
			if ($arg == '+filter' || $arg == '+filters'){
				$build = 'filter';
				continue;
			}
			if ($arg == '-nodes'){
				$build = 'no_nodes';
			}
			if ($arg == '-details'){
				$build = 'no_details';
			}
			if ($arg == '-sources'){
				$build = 'no_sources';
			}
			if ($arg == '-destinations'){
				$build = 'no_destinations';
			}

			if (is_array($selected[$build])) $selected[$build][] = $arg;
			else if (is_bool($selected[$build])) $selected[$build] = true;
			else $selected[$build] = $arg;

		}

		$hebe = new Hebe();
		$hebe->projects->list_project($selected);

		break;

	case 'link':
		if (count($arguments) < 1) usage($command);
		$selected = array(
			'arguments' => array(),
			'destinations' => array(),
			'projects' => array(),
			'platform' => "",
			'force' => false
		);

		$build = 'projects';

		foreach ($arguments as $arg){
			if ($arg == '+project' || $arg == '+projects' || $arg == '+proj'){
				$build = 'arguments';
				continue;
			}

			if ($arg == '+platform' || $arg == '+plat'){
				$build = 'platform';
				continue;
			}

			if ($arg == '+destination' || $arg == '+destinations' || $arg == '+dest'){
				$build = 'destinations';
				continue;
			}

			if ($arg == '+force'){
				$build = 'force';
			}

			if (is_array($selected[$build])) $selected[$build][] = $arg;
			else if (is_bool($selected[$build])) $selected[$build] = true;
			else $selected[$build] = $arg;
		}

		$hebe = new Hebe();
		$hebe->projects->link_project($selected);
		break;

	case 'edit':
		if (count($arguments) < 1) usage($command);
		$selected = array(
			'arguments' => array(),
			'platforms' => array(),
			'force' => false
		);

		$build = 'arguments';

		foreach ($arguments as $arg){
			if ($arg == '+platforms' || $arg == "+platform" || $arg == '+plat'){
				$build = 'platforms';
				continue;
			}
			if ($arg == '+force'){
				$build = 'force';
			}

			if (is_array($selected[$build])) $selected[$build][] = $arg;
			else if (is_bool($selected[$build])) $selected[$build] = true;
			else $selected[$build] = $arg;
		}

		$hebe = new Hebe();
		$hebe->projects->edit_project($selected);
		break;

	case 'version': case '--version': case '-v':
		$path = dirname(__FILE__);
		$date = exec("svn info ".$path."| awk '/^Last Changed Date:/ {print $7,$8,$9,$10,$5}'");
		$version = exec("svn info ".$path."| grep '^Last Changed Rev:' | sed -e 's/^Last Changed Rev: //'");

		Hebe::message("\nHebe v" . $version . " - ".$date." - RocketTheme\n");

		break;

	case 'update':
		$path = dirname(__FILE__);
		$update = exec("svn update ".$path);

		break;

	case 'help': case '--help': case '-h': default:
		if ($command == 'help' && count($arguments)) $file = $arguments[0];
		usage($file);
		break;
}

function usage($command = 'default'){
	global $app;

	if (is_array($command)) $command = 'default';
	$dir = dirname(__FILE__);
	$file = $dir."/help/".$command.".txt";

	if (file_exists($file)) Hebe::message(str_replace('%{app}', $app, file_get_contents($file)));
	else Hebe::error("Unable to find the help file `".$file);

	exit(1);
}

?>
